hab pkg install chef/ci-studio-common >/dev/null
source "$(hab pkg path chef/ci-studio-common)/bin/studio-common"

# This removes the visual mode when select text with the mouse in vim. 
echo "set mouse-=a" >> ~/.vimrc

export MYSQL_PORT=3306
export MONEY_DATA_SERVER_PORT=8888

function htop() {
  install_if_missing core/which which;
  install_if_missing core/htop htop
  TOOL_BIN=$(which htop 2>/dev/null);
  eval $TOOL_BIN $@
}

function load_dev_config() {
  export HAB_MYSQL="
app_username='lancewf'
app_password='lancewf'
bind='127.0.0.1'
local_only=true

"
  export HAB_MONEY_DATA_SERVER="
[http.listen]
port = $MONEY_DATA_SERVER_PORT
bind = '0.0.0.0'
local_only=false

"

}

function install_sbt() {
  hab pkg install -b lancewf/sbt;

  export JAVA_HOME=$(hab pkg path core/jre8)
  echo "Setting JAVA_HOME=$JAVA_HOME"
  rm /usr/bin/env
  ln -sv "$(hab pkg path core/coreutils)/bin/env" /usr/bin/env
}

function start() {
  install_if_missing core/busybox-static netstat;
  netstat -an | grep $MONEY_DATA_SERVER_PORT | grep LISTEN >/dev/null 2>/dev/null
  if [ $? == 0 ]; then
    echo "money_data_server_play is already running";
    return;
  fi

  start_mysql

  start_sup

  hab start $HAB_ORIGIN/money_data_server --bind database:mysql.default

  wait_or_fail_for_port_to_listen $MONEY_DATA_SERVER_PORT
}

function mysql_load_data() {
  install_if_missing lancewf/mysql mysql;
  $(hab pkg path $HAB_ORIGIN/money_data_server)/bin/mysql_load.sh $1
}

function mysql_shell() {
  install_if_missing lancewf/mysql mysql;
  $(hab pkg path $HAB_ORIGIN/money_data_server)/bin/mysql.sh
}

function start_mysql() {
  install_if_missing core/busybox-static netstat;
  netstat -an | grep $MYSQL_PORT | grep LISTEN >/dev/null 2>/dev/null
  if [ $? == 0 ]; then
    echo "mysql is already running";
    return;
  fi

  start_sup

  hab start lancewf/mysql

  wait_or_fail_for_port_to_listen $MYSQL_PORT
}

function start_sup() {
  load_dev_config
  hab sup status 2>/dev/null 1>&2
  [[ $? == 0 ]] && return
  mkdir -p /hab/sup/default
  echo "=> Launching the Habitat Supervisor in the background..."
  hab sup run $* > /hab/sup/default/sup.log &
  while : ; do
    hab sup status >/dev/null
    [[ $? -eq 0 ]] && break || sleep 1
  done
}

function status() {
 hab sup status;
}

# Saves the in memory bash history to a file
function save_history() {
  history -a /src/.bash_history
}

# if .studiorc is being sourced from an already running studio, don't reset bash
# history -- this is achieved by saving the current history before it is re-read
save_history

# Load the bash history from a file
history -r /src/.bash_history

function cleanup() {
    save_history
}

# When exiting the studio save the bash history to a file
trap cleanup EXIT
